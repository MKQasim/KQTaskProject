//
//  KQItemDetailsInteractor.swift
//  KQTaskProject
//
//  Created by KamsQue on 22/12/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol KQItemDetailsBusinessLogic
{
    func displayUserData(userDetails:UserDetails?)
    func getUserDetailsApi(request: KQItemDetails.Model.Request)
}

protocol KQItemDetailsDataStore
{
    var selectedUser: User? { get set }
}

class KQItemDetailsInteractor: KQItemDetailsBusinessLogic, KQItemDetailsDataStore
{
    var selectedUser: User?
    var presenter: KQItemDetailsPresentationLogic?
    var worker: KQItemDetailsWorker?
    var userBusiness = UserBusiness()
    
    // MARK: get User Details Api
    
    func getUserDetailsApi(request: KQItemDetails.Model.Request){
        worker = KQItemDetailsWorker()
        worker?.validateRequest(request: request, completion: { isValidate in
            if isValidate{
                self.userBusiness.userDetailsApiCall(parameters: ["loginId":(request.loginId ?? "") as String]) { userDetails, error in
                    self.displayUserData(userDetails: userDetails)
                }
            }else{
                self.presenter?.presentRequestValidationError(isValidated: isValidate)
            }
        })
    }
    
    // MARK: display User Data
    
    func displayUserData(userDetails:UserDetails?)
    {
        let response = KQItemDetails.Model.Response(selectedUser: selectedUser , userDetails: userDetails)
        presenter?.presentUserDetails(response: response)
    }
}
