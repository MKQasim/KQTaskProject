//
//  KQUserDetailsInteractor.swift
//  KQTaskProject
//
//  Created by KamsQue on 22/12/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol KQUserDetailsBusinessLogic
{
    func displayUserData(response:KQUserDetailsModels.Model.Response)
    func getUserDetailsApi(request: KQUserDetailsModels.Model.Request)
    func checkApiUrlSerssion()
}

protocol KQUserDetailsDataStore
{
    var selectedUser: User? { get set }
}

class KQUserDetailsInteractor: KQUserDetailsBusinessLogic, KQUserDetailsDataStore
{
    
    var selectedUser: User?
    var presenter: KQUserDetailsPresentationLogic?
    var worker: KQUserDetailsWorker?
    var userBusiness : UserBusinessProtocol
    
    
    init(userBusiness: UserBusinessProtocol =  UserBusiness(),
         presenter: KQUserDetailsPresentationLogic?, worker: KQUserDetailsWorker? = KQUserDetailsWorker()) {
        self.userBusiness = userBusiness
        self.presenter = presenter
        self.worker = worker
    }
    
    // MARK: get User Details Api
    
    func getUserDetailsApi(request: KQUserDetailsModels.Model.Request){
        worker?.validateRequest(request: request, completion: { isValidate in
            if isValidate{
                self.userBusiness.userDetailsApiCall(parameters: ["loginId":(request.loginId ?? "") as String]) { userDetails, error in
                    let response = KQUserDetailsModels.Model.Response(selectedUser: self.selectedUser, userDetails: userDetails)
                    self.displayUserData(response: response)
                }
            }else{
                self.presenter?.presentRequestValidationError(isValidated: isValidate)
            }
        })
    }
    
    // MARK: display User Data
    
    func displayUserData(response:KQUserDetailsModels.Model.Response)
    {
        presenter?.presentUserDetails(response: response)
    }
    
    func checkApiUrlSerssion(){
        self.userBusiness.userstopApiCallStart { isCanceled in
            self.presenter?.checkApiUrlSerssion(isCanceled: isCanceled)
        }
    }
}
