//
//  KQHomeViewController.swift
//  KQTaskProject
//
//  Created by KamsQue on 22/12/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol KQHomeDisplayLogic: class
{
    func displaySomething(viewModel: KQHome.Something.ViewModel)
}

class KQHomeViewController: KQSuperVC, KQHomeDisplayLogic
{
    var interactor: KQHomeBusinessLogic?
    var router: (NSObjectProtocol & KQHomeRoutingLogic & KQHomeDataPassing)?
    
    // MARK: - Properties
    
    lazy var tableView : UITableView = {     // view
        let view = UITableView()
        view.translatesAutoresizingMaskIntoConstraints = false
        view.register(KQContactTableViewCell.self, forCellReuseIdentifier: KQContactTableViewCell.identifire)
        view.dataSource = self
        return  view
    }()
    
    private let contacts = ContactAPI.getContacts() // model
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = KQHomeInteractor()
        let presenter = KQHomePresenter()
        let router = KQHomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - SetUp Navigation
    private func setUpNavigation() {
        navigationItem.title = "Contacts"
    }
    
    // MARK: - Private Actions
    private func configureUI() {
        // The .xib files should have the same name as the class file
        setTableViewConstraint()
        tableView.delegate = self
    }
    // MARK: - SetConstraint
    func setTableViewConstraint(){
        self.view.addSubview(tableView)
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo:view.safeAreaLayoutGuide.topAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.trailingAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setUpNavigation()
        view.backgroundColor = .red
        configureUI()
        doSomething()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = KQHome.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: KQHome.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}

// MARK: - UITableViewDataSource and UITableViewDelegate
extension KQHomeViewController : UITableViewDataSource, UITableViewDelegate{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return contacts.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: KQContactTableViewCell.identifire, for: indexPath) as! KQContactTableViewCell
        cell.contact = contacts[indexPath.row]
        print(contacts[indexPath.row])
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        100
    }
    
    func tableView(_ tableView: UITableView, estimatedHeightForRowAt indexPath: IndexPath) -> CGFloat {
        return 100
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}
